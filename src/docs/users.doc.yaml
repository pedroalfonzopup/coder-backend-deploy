components:
  schemas:
    User:
      type: object
      properties:
        name:
          description: Nombre del usuario
          type: string
        photo:
          description: Foto del usuario
          type: string
        email:
          description: Email del usuario
          type: string
        role:
          description: Rol del usuario
          type: number
      example:
        name: Raul Guitierrez
        photo: https://www.shutterstock.com/image-vector/blank-avatar-photo-place-holder-600nw-1095249842.jpg
        email: Raulparbada@gmail.com
        role: 1

    UserUpdate:
      type: object
      properties:
        title:
          description: Nombre del usuario
          type: string
        photo:
          description: Foto del usuario
          type: string
        email:
          description: Email del usuario
          type: string
        role:
          description: Rol del usuario
          type: number
      example:
        name: Raul Guitierrez
        photo: https://www.shutterstock.com/image-vector/blank-avatar-photo-place-holder-600nw-1095249842.jpg
        email: Raulparbada@gmail.com
        role: 1

  responses:
    create:
      type: object
      properties:
        statusCode: Indicador del estado de la respuesta
        payload: Documento del usuario creado correctamente
      example:
        statusCode: 201
        payload:
          _id: 541aae1e7b2132607f2b4df
          name: Raul Guitierrez
          photo: https://www.shutterstock.com/image-vector/blank-avatar-photo-place-holder-600nw-1095249842.jpg
          email: Raulparbada@gmail.com
          role: 1

    read:
      type: object
      properties:
        statusCode: Indicador del estado de la respuesta
        payload: Devuelve los documentos de usuarios del servidor
      example:
        statusCode: 200
        payload:
          - _id: 541aae1e7b21326fggrf2b4df
            name: Raul Guitierrez
            photo: https://www.shutterstock.com/image-vector/blank-avatar-photo-place-holder-600nw-1095249842.jpg
            email: Raulparbada@gmail.com
            role: 1
          - _id: 541aae1e7b2132607f2b4df
            name: James Guitierrez
            photo: https://www.shutterstock.com/image-vector/blank-avatar-photo-place-holder-600nw-1095249842.jpg
            email: JamesLarbada@gmail.com
            role: 1
          - _id: 541aae1e7b2132607f2b1241f
            name: Pirmo Guitierrez
            photo: https://www.shutterstock.com/image-vector/blank-avatar-photo-place-holder-600nw-1095249842.jpg
            email: Forndepirmo@gmail.com
            role: 1

    readOne:
      type: object
      properties:
        statusCode: Indicador del estado de la respuesta
        payload: Devuelve el documento del usuario correspondiente al id
      example:
        statusCode: 200
        payload:
          _id: 541aae1e7b2132607f2b1241f
          name: Pirmo Guitierrez
          photo: https://www.shutterstock.com/image-vector/blank-avatar-photo-place-holder-600nw-1095249842.jpg
          email: Forndepirmo@gmail.com
          role: 1

    readByEmail:
      type: object
      properties:
        statusCode: Indicador del estado de la respuesta
        payload: Devuelve el documento del usuario correspondiente al email
      example:
        statusCode: 200
        payload:
          _id: 541aae1e7b2132607f2b1241f
          name: Pirmo Guitierrez
          photo: https://www.shutterstock.com/image-vector/blank-avatar-photo-place-holder-600nw-1095249842.jpg
          email: Forndepirmo@gmail.com
          role: 1

    update:
      type: object
      properties:
        statusCode: Indicador del estado de la respuesta
        payload: ObjectId del usuario modificado
      example:
        statusCode: 200
        payload: 6541aae1e7b2683607f2b4df

    destroy:
      type: object
      properties:
        statusCode: Indicador del estado de la respuesta
        payload: ObjectId del usuario eliminado
      example:
        statusCode: success
        payload: 6541aae1e7b2683607f2b4df
  
    auth:
      type: object
      properties:
        statusCode:
          type: string
          description: Estado de la solicitud
        message:
          type: string
          description: Descripción del error
      example:
        statusCode: 401
        message: Invalid credentials
    
    forbidden:
      type: object
      properties:
        statusCode:
          type: string
          description: Estado de la solicitud
        message:
          type: string
          description: Descripción del error
      example:
        statusCode: 403
        message: Forbidden
    
    no8char:
      type: object
      properties:
        statusCode:
          type: string
          description: Estado de la solicitud
        message:
          type: string
          description: Descripción del error
      example:
        statusCode: 400
        message: Password must have at least 8 characters
    
    notFound:
      type: object
      properties:
        statusCode:
          type: string
          description: Indicador del estado de la respuesta
        message:
          type: string
          description: Indicador de qué error se cometió
      example:
        statusCode: 404
        message: Not found
    
    fatal:
      type: object
      properties:
        statusCode:
          type: string
          description: Indicador del estado de la respuesta
        message:
          type: string
          description: Indicador de qué error se cometió
      example:
        statusCode: 500
        message: fatal

    error:
      type: object
      properties:
        statusCode:
          type: string
          description: Indicador del estado de la respuesta
        message:
          type: string
          description: Indicador de qué error se cometió
      example:
        statusCode: 400
        message: error

    token:
      type: object
      properties:
        statusCode:
          type: string
          description: Indicador del estado de la respuesta
        message:
          type: string
          description: Indicador de qué error se cometió
      example:
        statusCode: 400
        message: Invalid verified token!

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token

paths:
  /api/users:

    post:
      summary: Agregar un nuevo user a la base de datos
      tags: 
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/User'
      responses:
        "201":
          description: Éxito en la carga de un usuario
          content:
            application/json:
              schema:
                $ref: '#components/responses/create'
        "400":
          description: La contraseña debe tener almenos 8 digitos
          content:
            application/json:
              schema:
                $ref: '#components/responses/no8char'
        "401":
          description: Credenciales invalidas
          content:
            application/json:
              schema:
                $ref: '#components/responses/auth'
        "403":
          description: Acceso no permitido
          content:
            application/json:
              schema:
                $ref: '#components/responses/forbidden'
        "500":
          description: Falla del servidor al crear un producto
          content:
            application/json:
              schema:
                $ref: '#components/responses/fatal'

    get:
      summary: Leer todos los usuarios del servidor
      tags:
        - User
      security:
        - cookieAuth: ["ADMIN"]
      parameters:
        - name: page
          in: query
          type: integer
          description: Numero de página a mostrar
        - name: limit
          in: query
          type: integer
          description: Numero de documentos a mostrar por página
      responses:
        "200":
          description: Éxito al leer los productos
          content:
            application/json:
              schema:
                $ref: '#components/responses/read'
        "404":
          description: Documento/s no encontrados
          content:
            application/json:
              schema:
                $ref: '#components/responses/notFound'
        "500":
          description: Falla del servidor al leer los documentos
          content:
            application/json:
              schema:
                $ref: '#components/responses/fatal'

  /api/users/{uid}:

    put:
      summary: Actualizar los datos de un usuario
      tags:
        - User
      security:
        - cookieAuth: ["ADMIN"]
      parameters:
        - name: uid
          in: path
          required: true
          description: ObjectId del usuario a modificar
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/UserUpdate'
      responses:
        "200":
          description: Éxito en la actualizacion del usuario
          content:
            application/json:
              schema:
                $ref: '#components/responses/create'
        "400":
          description: La contraseña debe tener almenos 8 digitos
          content:
            application/json:
              schema:
                $ref: '#components/responses/no8char'
        "401":
          description: Credenciales invalidas
          content:
            application/json:
              schema:
                $ref: '#components/responses/auth'
        "403":
          description: Acceso no permitido
          content:
            application/json:
              schema:
                $ref: '#components/responses/forbidden'
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#components/responses/notFound'
        "500":
          description: Falla del servidor al actualizar un usuario
          content:
            application/json:
              schema:
                $ref: '#components/responses/fatal'

    get:
      summary: Leer los datos de un usuario
      tags:
        - User
      security:
        - cookieAuth: ["ADMIN"]
      parameters:
        - name: uid
          in: path
          required: true
          description: ObjectId del usuario a leer
          schema:
            $type: string
      responses:
        "200":
          description: Éxito al leer el usuario
          content:
            application/json:
              schema:
                $ref: '#components/responses/readOne'
        "404":
          description: Documento no encontrado
          content:
            application/json:
              schema:
                $ref: '#components/responses/notFound'
        "500":
          description: Falla del servidor al leer el documento
          content:
            application/json:
              schema:
                $ref: '#components/responses/fatal'

    delete:
      summary: Eliminar un usuario
      tags:
        - User
      security:
        - cookieAuth: ["ADMIN"]
      parameters:
        - name: uid
          in: path
          required: true
          description: ObjectId del usuario a eliminar
          schema:
            $type: string
      responses:
        "200":
          description: Éxito en borrar el usuario
          content:
            application/json:
              schema:
                $ref: '#components/responses/create'
        "401":
          description: Credenciales invalidas
          content:
            application/json:
              schema:
                $ref: '#components/responses/auth'
        "403":
          description: Acceso no permitido
          content:
            application/json:
              schema:
                $ref: '#components/responses/forbidden'
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#components/responses/notFound'
        "500":
          description: Falla del servidor al borrar el usuario
          content:
            application/json:
              schema:
                $ref: '#components/responses/fatal'

  /api/users/email/{email}:

    get:
      summary: Leer los datos de un usuario correspondiente al email dado
      tags:
        - User
      security:
        - cookieAuth: ["ADMIN"]
      parameters:
        - name: uid
          in: path
          required: true
          description: ObjectId del usuario a leer
          schema:
            $type: string
      responses:
        "200":
          description: Éxito al leer el usuario
          content:
            application/json:
              schema:
                $ref: '#components/responses/readByEmail'
        "404":
          description: Documento no encontrado
          content:
            application/json:
              schema:
                $ref: '#components/responses/notFound'
        "500":
          description: Falla del servidor al leer el documento
          content:
            application/json:
              schema:
                $ref: '#components/responses/fatal'